// Code generated by ent, DO NOT EDIT.

package hpelineupmallitempurchasehistory

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/yssk22/hpapp/go/service/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// OrderID applies equality check predicate on the "order_id" field. It's identical to OrderIDEQ.
func OrderID(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOrderID, v))
}

// Num applies equality check predicate on the "num" field. It's identical to NumEQ.
func Num(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldNum, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPrice, v))
}

// OrderedAt applies equality check predicate on the "ordered_at" field. It's identical to OrderedAtEQ.
func OrderedAt(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOrderedAt, v))
}

// Permalink applies equality check predicate on the "permalink" field. It's identical to PermalinkEQ.
func Permalink(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPermalink, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldName, v))
}

// PurchasedItemID applies equality check predicate on the "purchased_item_id" field. It's identical to PurchasedItemIDEQ.
func PurchasedItemID(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPurchasedItemID, v))
}

// OwnerUserID applies equality check predicate on the "owner_user_id" field. It's identical to OwnerUserIDEQ.
func OwnerUserID(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOwnerUserID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotNull(FieldUpdatedAt))
}

// OrderIDEQ applies the EQ predicate on the "order_id" field.
func OrderIDEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOrderID, v))
}

// OrderIDNEQ applies the NEQ predicate on the "order_id" field.
func OrderIDNEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldOrderID, v))
}

// OrderIDIn applies the In predicate on the "order_id" field.
func OrderIDIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldOrderID, vs...))
}

// OrderIDNotIn applies the NotIn predicate on the "order_id" field.
func OrderIDNotIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldOrderID, vs...))
}

// OrderIDGT applies the GT predicate on the "order_id" field.
func OrderIDGT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldOrderID, v))
}

// OrderIDGTE applies the GTE predicate on the "order_id" field.
func OrderIDGTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldOrderID, v))
}

// OrderIDLT applies the LT predicate on the "order_id" field.
func OrderIDLT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldOrderID, v))
}

// OrderIDLTE applies the LTE predicate on the "order_id" field.
func OrderIDLTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldOrderID, v))
}

// OrderIDContains applies the Contains predicate on the "order_id" field.
func OrderIDContains(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContains(FieldOrderID, v))
}

// OrderIDHasPrefix applies the HasPrefix predicate on the "order_id" field.
func OrderIDHasPrefix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasPrefix(FieldOrderID, v))
}

// OrderIDHasSuffix applies the HasSuffix predicate on the "order_id" field.
func OrderIDHasSuffix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasSuffix(FieldOrderID, v))
}

// OrderIDEqualFold applies the EqualFold predicate on the "order_id" field.
func OrderIDEqualFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEqualFold(FieldOrderID, v))
}

// OrderIDContainsFold applies the ContainsFold predicate on the "order_id" field.
func OrderIDContainsFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContainsFold(FieldOrderID, v))
}

// NumEQ applies the EQ predicate on the "num" field.
func NumEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldNum, v))
}

// NumNEQ applies the NEQ predicate on the "num" field.
func NumNEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldNum, v))
}

// NumIn applies the In predicate on the "num" field.
func NumIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldNum, vs...))
}

// NumNotIn applies the NotIn predicate on the "num" field.
func NumNotIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldNum, vs...))
}

// NumGT applies the GT predicate on the "num" field.
func NumGT(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldNum, v))
}

// NumGTE applies the GTE predicate on the "num" field.
func NumGTE(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldNum, v))
}

// NumLT applies the LT predicate on the "num" field.
func NumLT(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldNum, v))
}

// NumLTE applies the LTE predicate on the "num" field.
func NumLTE(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldNum, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldPrice, v))
}

// OrderedAtEQ applies the EQ predicate on the "ordered_at" field.
func OrderedAtEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOrderedAt, v))
}

// OrderedAtNEQ applies the NEQ predicate on the "ordered_at" field.
func OrderedAtNEQ(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldOrderedAt, v))
}

// OrderedAtIn applies the In predicate on the "ordered_at" field.
func OrderedAtIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldOrderedAt, vs...))
}

// OrderedAtNotIn applies the NotIn predicate on the "ordered_at" field.
func OrderedAtNotIn(vs ...time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldOrderedAt, vs...))
}

// OrderedAtGT applies the GT predicate on the "ordered_at" field.
func OrderedAtGT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldOrderedAt, v))
}

// OrderedAtGTE applies the GTE predicate on the "ordered_at" field.
func OrderedAtGTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldOrderedAt, v))
}

// OrderedAtLT applies the LT predicate on the "ordered_at" field.
func OrderedAtLT(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldOrderedAt, v))
}

// OrderedAtLTE applies the LTE predicate on the "ordered_at" field.
func OrderedAtLTE(v time.Time) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldOrderedAt, v))
}

// PermalinkEQ applies the EQ predicate on the "permalink" field.
func PermalinkEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPermalink, v))
}

// PermalinkNEQ applies the NEQ predicate on the "permalink" field.
func PermalinkNEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldPermalink, v))
}

// PermalinkIn applies the In predicate on the "permalink" field.
func PermalinkIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldPermalink, vs...))
}

// PermalinkNotIn applies the NotIn predicate on the "permalink" field.
func PermalinkNotIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldPermalink, vs...))
}

// PermalinkGT applies the GT predicate on the "permalink" field.
func PermalinkGT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldPermalink, v))
}

// PermalinkGTE applies the GTE predicate on the "permalink" field.
func PermalinkGTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldPermalink, v))
}

// PermalinkLT applies the LT predicate on the "permalink" field.
func PermalinkLT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldPermalink, v))
}

// PermalinkLTE applies the LTE predicate on the "permalink" field.
func PermalinkLTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldPermalink, v))
}

// PermalinkContains applies the Contains predicate on the "permalink" field.
func PermalinkContains(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContains(FieldPermalink, v))
}

// PermalinkHasPrefix applies the HasPrefix predicate on the "permalink" field.
func PermalinkHasPrefix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasPrefix(FieldPermalink, v))
}

// PermalinkHasSuffix applies the HasSuffix predicate on the "permalink" field.
func PermalinkHasSuffix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasSuffix(FieldPermalink, v))
}

// PermalinkEqualFold applies the EqualFold predicate on the "permalink" field.
func PermalinkEqualFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEqualFold(FieldPermalink, v))
}

// PermalinkContainsFold applies the ContainsFold predicate on the "permalink" field.
func PermalinkContainsFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContainsFold(FieldPermalink, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldContainsFold(FieldName, v))
}

// PurchasedItemIDEQ applies the EQ predicate on the "purchased_item_id" field.
func PurchasedItemIDEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldPurchasedItemID, v))
}

// PurchasedItemIDNEQ applies the NEQ predicate on the "purchased_item_id" field.
func PurchasedItemIDNEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldPurchasedItemID, v))
}

// PurchasedItemIDIn applies the In predicate on the "purchased_item_id" field.
func PurchasedItemIDIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldPurchasedItemID, vs...))
}

// PurchasedItemIDNotIn applies the NotIn predicate on the "purchased_item_id" field.
func PurchasedItemIDNotIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldPurchasedItemID, vs...))
}

// PurchasedItemIDIsNil applies the IsNil predicate on the "purchased_item_id" field.
func PurchasedItemIDIsNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIsNull(FieldPurchasedItemID))
}

// PurchasedItemIDNotNil applies the NotNil predicate on the "purchased_item_id" field.
func PurchasedItemIDNotNil() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotNull(FieldPurchasedItemID))
}

// OwnerUserIDEQ applies the EQ predicate on the "owner_user_id" field.
func OwnerUserIDEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldEQ(FieldOwnerUserID, v))
}

// OwnerUserIDNEQ applies the NEQ predicate on the "owner_user_id" field.
func OwnerUserIDNEQ(v int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNEQ(FieldOwnerUserID, v))
}

// OwnerUserIDIn applies the In predicate on the "owner_user_id" field.
func OwnerUserIDIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldIn(FieldOwnerUserID, vs...))
}

// OwnerUserIDNotIn applies the NotIn predicate on the "owner_user_id" field.
func OwnerUserIDNotIn(vs ...int) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(sql.FieldNotIn(FieldOwnerUserID, vs...))
}

// HasElineupMallItem applies the HasEdge predicate on the "elineup_mall_item" edge.
func HasElineupMallItem() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ElineupMallItemTable, ElineupMallItemColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasElineupMallItemWith applies the HasEdge predicate on the "elineup_mall_item" edge with a given conditions (other predicates).
func HasElineupMallItemWith(preds ...predicate.HPElineupMallItem) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		step := newElineupMallItemStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOwner applies the HasEdge predicate on the "owner" edge.
func HasOwner() predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, OwnerTable, OwnerColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOwnerWith applies the HasEdge predicate on the "owner" edge with a given conditions (other predicates).
func HasOwnerWith(preds ...predicate.User) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		step := newOwnerStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HPElineupMallItemPurchaseHistory) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HPElineupMallItemPurchaseHistory) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HPElineupMallItemPurchaseHistory) predicate.HPElineupMallItemPurchaseHistory {
	return predicate.HPElineupMallItemPurchaseHistory(func(s *sql.Selector) {
		p(s.Not())
	})
}
