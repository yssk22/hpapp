// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/yssk22/hpapp/go/service/ent/auth"
	"github.com/yssk22/hpapp/go/service/ent/hpameblopost"
	"github.com/yssk22/hpapp/go/service/ent/hpartist"
	"github.com/yssk22/hpapp/go/service/ent/hpblob"
	"github.com/yssk22/hpapp/go/service/ent/hpelineupmallitem"
	"github.com/yssk22/hpapp/go/service/ent/hpevent"
	"github.com/yssk22/hpapp/go/service/ent/hpfceventticket"
	"github.com/yssk22/hpapp/go/service/ent/hpfeeditem"
	"github.com/yssk22/hpapp/go/service/ent/hpfollow"
	"github.com/yssk22/hpapp/go/service/ent/hpigpost"
	"github.com/yssk22/hpapp/go/service/ent/hpmember"
	"github.com/yssk22/hpapp/go/service/ent/hpsorthistory"
	"github.com/yssk22/hpapp/go/service/ent/hpviewhistory"
	"github.com/yssk22/hpapp/go/service/ent/testent"
	"github.com/yssk22/hpapp/go/service/ent/user"
	"github.com/yssk22/hpapp/go/service/ent/usernotificationlog"
	"github.com/yssk22/hpapp/go/service/ent/usernotificationsetting"
	"github.com/yssk22/hpapp/go/service/schema"
	"github.com/yssk22/hpapp/go/service/schema/jsonfields"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authMixin := schema.Auth{}.Mixin()
	auth.Policy = privacy.NewPolicies(schema.Auth{})
	auth.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := auth.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	authMixinHooks0 := authMixin[0].Hooks()

	auth.Hooks[1] = authMixinHooks0[0]
	hpameblopostMixin := schema.HPAmebloPost{}.Mixin()
	hpameblopostMixinHooks1 := hpameblopostMixin[1].Hooks()
	hpameblopost.Hooks[0] = hpameblopostMixinHooks1[0]
	hpameblopostMixinFields0 := hpameblopostMixin[0].Fields()
	_ = hpameblopostMixinFields0
	hpameblopostFields := schema.HPAmebloPost{}.Fields()
	_ = hpameblopostFields
	// hpameblopostDescErrorCount is the schema descriptor for error_count field.
	hpameblopostDescErrorCount := hpameblopostMixinFields0[1].Descriptor()
	// hpameblopost.DefaultErrorCount holds the default value on creation for the error_count field.
	hpameblopost.DefaultErrorCount = hpameblopostDescErrorCount.Default.(int)
	// hpameblopostDescRecrawlRequired is the schema descriptor for recrawl_required field.
	hpameblopostDescRecrawlRequired := hpameblopostMixinFields0[4].Descriptor()
	// hpameblopost.DefaultRecrawlRequired holds the default value on creation for the recrawl_required field.
	hpameblopost.DefaultRecrawlRequired = hpameblopostDescRecrawlRequired.Default.(bool)
	hpartistMixin := schema.HPArtist{}.Mixin()
	hpartist.Policy = privacy.NewPolicies(schema.HPArtist{})
	hpartist.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hpartist.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hpartistMixinHooks1 := hpartistMixin[1].Hooks()

	hpartist.Hooks[1] = hpartistMixinHooks1[0]
	hpartistMixinFields0 := hpartistMixin[0].Fields()
	_ = hpartistMixinFields0
	hpartistFields := schema.HPArtist{}.Fields()
	_ = hpartistFields
	// hpartistDescErrorCount is the schema descriptor for error_count field.
	hpartistDescErrorCount := hpartistMixinFields0[1].Descriptor()
	// hpartist.DefaultErrorCount holds the default value on creation for the error_count field.
	hpartist.DefaultErrorCount = hpartistDescErrorCount.Default.(int)
	// hpartistDescRecrawlRequired is the schema descriptor for recrawl_required field.
	hpartistDescRecrawlRequired := hpartistMixinFields0[4].Descriptor()
	// hpartist.DefaultRecrawlRequired holds the default value on creation for the recrawl_required field.
	hpartist.DefaultRecrawlRequired = hpartistDescRecrawlRequired.Default.(bool)
	hpblobMixin := schema.HPBlob{}.Mixin()
	hpblobMixinHooks0 := hpblobMixin[0].Hooks()
	hpblob.Hooks[0] = hpblobMixinHooks0[0]
	hpblobFields := schema.HPBlob{}.Fields()
	_ = hpblobFields
	// hpblobDescStoragePath is the schema descriptor for storage_path field.
	hpblobDescStoragePath := hpblobFields[0].Descriptor()
	// hpblob.StoragePathValidator is a validator for the "storage_path" field. It is called by the builders before save.
	hpblob.StoragePathValidator = hpblobDescStoragePath.Validators[0].(func(string) error)
	// hpblobDescSourceURL is the schema descriptor for source_url field.
	hpblobDescSourceURL := hpblobFields[1].Descriptor()
	// hpblob.SourceURLValidator is a validator for the "source_url" field. It is called by the builders before save.
	hpblob.SourceURLValidator = hpblobDescSourceURL.Validators[0].(func(string) error)
	// hpblobDescSourceHTMLURL is the schema descriptor for source_html_url field.
	hpblobDescSourceHTMLURL := hpblobFields[2].Descriptor()
	// hpblob.SourceHTMLURLValidator is a validator for the "source_html_url" field. It is called by the builders before save.
	hpblob.SourceHTMLURLValidator = hpblobDescSourceHTMLURL.Validators[0].(func(string) error)
	hpelineupmallitemMixin := schema.HPElineupMallItem{}.Mixin()
	hpelineupmallitemMixinHooks1 := hpelineupmallitemMixin[1].Hooks()
	hpelineupmallitem.Hooks[0] = hpelineupmallitemMixinHooks1[0]
	hpelineupmallitemMixinFields0 := hpelineupmallitemMixin[0].Fields()
	_ = hpelineupmallitemMixinFields0
	hpelineupmallitemFields := schema.HPElineupMallItem{}.Fields()
	_ = hpelineupmallitemFields
	// hpelineupmallitemDescErrorCount is the schema descriptor for error_count field.
	hpelineupmallitemDescErrorCount := hpelineupmallitemMixinFields0[1].Descriptor()
	// hpelineupmallitem.DefaultErrorCount holds the default value on creation for the error_count field.
	hpelineupmallitem.DefaultErrorCount = hpelineupmallitemDescErrorCount.Default.(int)
	// hpelineupmallitemDescRecrawlRequired is the schema descriptor for recrawl_required field.
	hpelineupmallitemDescRecrawlRequired := hpelineupmallitemMixinFields0[4].Descriptor()
	// hpelineupmallitem.DefaultRecrawlRequired holds the default value on creation for the recrawl_required field.
	hpelineupmallitem.DefaultRecrawlRequired = hpelineupmallitemDescRecrawlRequired.Default.(bool)
	// hpelineupmallitemDescDescription is the schema descriptor for description field.
	hpelineupmallitemDescDescription := hpelineupmallitemFields[2].Descriptor()
	// hpelineupmallitem.DefaultDescription holds the default value on creation for the description field.
	hpelineupmallitem.DefaultDescription = hpelineupmallitemDescDescription.Default.(string)
	hpeventMixin := schema.HPEvent{}.Mixin()
	hpeventMixinHooks0 := hpeventMixin[0].Hooks()
	hpevent.Hooks[0] = hpeventMixinHooks0[0]
	hpeventFields := schema.HPEvent{}.Fields()
	_ = hpeventFields
	hpfceventticketMixin := schema.HPFCEventTicket{}.Mixin()
	hpfceventticket.Policy = privacy.NewPolicies(schema.HPFCEventTicket{})
	hpfceventticket.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hpfceventticket.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hpfceventticketMixinHooks0 := hpfceventticketMixin[0].Hooks()

	hpfceventticket.Hooks[1] = hpfceventticketMixinHooks0[0]
	hpfceventticketFields := schema.HPFCEventTicket{}.Fields()
	_ = hpfceventticketFields
	hpfeeditemMixin := schema.HPFeedItem{}.Mixin()
	hpfeeditemMixinHooks0 := hpfeeditemMixin[0].Hooks()
	hpfeeditem.Hooks[0] = hpfeeditemMixinHooks0[0]
	hpfeeditemFields := schema.HPFeedItem{}.Fields()
	_ = hpfeeditemFields
	hpfollowMixin := schema.HPFollow{}.Mixin()
	hpfollowMixinHooks0 := hpfollowMixin[0].Hooks()
	hpfollow.Hooks[0] = hpfollowMixinHooks0[0]
	hpfollowFields := schema.HPFollow{}.Fields()
	_ = hpfollowFields
	hpigpostMixin := schema.HPIgPost{}.Mixin()
	hpigpostMixinHooks1 := hpigpostMixin[1].Hooks()
	hpigpost.Hooks[0] = hpigpostMixinHooks1[0]
	hpigpostMixinFields0 := hpigpostMixin[0].Fields()
	_ = hpigpostMixinFields0
	hpigpostFields := schema.HPIgPost{}.Fields()
	_ = hpigpostFields
	// hpigpostDescErrorCount is the schema descriptor for error_count field.
	hpigpostDescErrorCount := hpigpostMixinFields0[1].Descriptor()
	// hpigpost.DefaultErrorCount holds the default value on creation for the error_count field.
	hpigpost.DefaultErrorCount = hpigpostDescErrorCount.Default.(int)
	// hpigpostDescRecrawlRequired is the schema descriptor for recrawl_required field.
	hpigpostDescRecrawlRequired := hpigpostMixinFields0[4].Descriptor()
	// hpigpost.DefaultRecrawlRequired holds the default value on creation for the recrawl_required field.
	hpigpost.DefaultRecrawlRequired = hpigpostDescRecrawlRequired.Default.(bool)
	hpmemberMixin := schema.HPMember{}.Mixin()
	hpmember.Policy = privacy.NewPolicies(schema.HPMember{})
	hpmember.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hpmember.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hpmemberMixinHooks1 := hpmemberMixin[1].Hooks()

	hpmember.Hooks[1] = hpmemberMixinHooks1[0]
	hpmemberMixinFields0 := hpmemberMixin[0].Fields()
	_ = hpmemberMixinFields0
	hpmemberFields := schema.HPMember{}.Fields()
	_ = hpmemberFields
	// hpmemberDescErrorCount is the schema descriptor for error_count field.
	hpmemberDescErrorCount := hpmemberMixinFields0[1].Descriptor()
	// hpmember.DefaultErrorCount holds the default value on creation for the error_count field.
	hpmember.DefaultErrorCount = hpmemberDescErrorCount.Default.(int)
	// hpmemberDescRecrawlRequired is the schema descriptor for recrawl_required field.
	hpmemberDescRecrawlRequired := hpmemberMixinFields0[4].Descriptor()
	// hpmember.DefaultRecrawlRequired holds the default value on creation for the recrawl_required field.
	hpmember.DefaultRecrawlRequired = hpmemberDescRecrawlRequired.Default.(bool)
	hpsorthistoryMixin := schema.HPSortHistory{}.Mixin()
	hpsorthistory.Policy = privacy.NewPolicies(schema.HPSortHistory{})
	hpsorthistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hpsorthistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hpsorthistoryMixinHooks0 := hpsorthistoryMixin[0].Hooks()

	hpsorthistory.Hooks[1] = hpsorthistoryMixinHooks0[0]
	hpviewhistoryMixin := schema.HPViewHistory{}.Mixin()
	hpviewhistory.Policy = privacy.NewPolicies(schema.HPViewHistory{})
	hpviewhistory.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := hpviewhistory.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	hpviewhistoryMixinHooks0 := hpviewhistoryMixin[0].Hooks()

	hpviewhistory.Hooks[1] = hpviewhistoryMixinHooks0[0]
	hpviewhistoryFields := schema.HPViewHistory{}.Fields()
	_ = hpviewhistoryFields
	// hpviewhistoryDescIsFavorite is the schema descriptor for is_favorite field.
	hpviewhistoryDescIsFavorite := hpviewhistoryFields[3].Descriptor()
	// hpviewhistory.DefaultIsFavorite holds the default value on creation for the is_favorite field.
	hpviewhistory.DefaultIsFavorite = hpviewhistoryDescIsFavorite.Default.(bool)
	testentFields := schema.TestEnt{}.Fields()
	_ = testentFields
	// testentDescStringField is the schema descriptor for string_field field.
	testentDescStringField := testentFields[0].Descriptor()
	// testent.DefaultStringField holds the default value on creation for the string_field field.
	testent.DefaultStringField = testentDescStringField.Default.(string)
	// testentDescTextField is the schema descriptor for text_field field.
	testentDescTextField := testentFields[1].Descriptor()
	// testent.DefaultTextField holds the default value on creation for the text_field field.
	testent.DefaultTextField = testentDescTextField.Default.(string)
	// testentDescBytesField is the schema descriptor for bytes_field field.
	testentDescBytesField := testentFields[2].Descriptor()
	// testent.DefaultBytesField holds the default value on creation for the bytes_field field.
	testent.DefaultBytesField = testentDescBytesField.Default.([]byte)
	// testentDescBoolField is the schema descriptor for bool_field field.
	testentDescBoolField := testentFields[3].Descriptor()
	// testent.DefaultBoolField holds the default value on creation for the bool_field field.
	testent.DefaultBoolField = testentDescBoolField.Default.(bool)
	// testentDescTimeField is the schema descriptor for time_field field.
	testentDescTimeField := testentFields[4].Descriptor()
	// testent.DefaultTimeField holds the default value on creation for the time_field field.
	testent.DefaultTimeField = testentDescTimeField.Default.(time.Time)
	// testentDescIntField is the schema descriptor for int_field field.
	testentDescIntField := testentFields[5].Descriptor()
	// testent.DefaultIntField holds the default value on creation for the int_field field.
	testent.DefaultIntField = testentDescIntField.Default.(int)
	// testentDescInt64Field is the schema descriptor for int64_field field.
	testentDescInt64Field := testentFields[6].Descriptor()
	// testent.DefaultInt64Field holds the default value on creation for the int64_field field.
	testent.DefaultInt64Field = testentDescInt64Field.Default.(int64)
	// testentDescFloatField is the schema descriptor for float_field field.
	testentDescFloatField := testentFields[7].Descriptor()
	// testent.DefaultFloatField holds the default value on creation for the float_field field.
	testent.DefaultFloatField = testentDescFloatField.Default.(float64)
	// testentDescJSONField is the schema descriptor for json_field field.
	testentDescJSONField := testentFields[8].Descriptor()
	// testent.DefaultJSONField holds the default value on creation for the json_field field.
	testent.DefaultJSONField = testentDescJSONField.Default.(*jsonfields.TestJSON)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks0 := userMixin[0].Hooks()

	user.Hooks[1] = userMixinHooks0[0]
	usernotificationlogMixin := schema.UserNotificationLog{}.Mixin()
	usernotificationlogMixinHooks0 := usernotificationlogMixin[0].Hooks()
	usernotificationlog.Hooks[0] = usernotificationlogMixinHooks0[0]
	usernotificationlogFields := schema.UserNotificationLog{}.Fields()
	_ = usernotificationlogFields
	// usernotificationlogDescStatusMessage is the schema descriptor for status_message field.
	usernotificationlogDescStatusMessage := usernotificationlogFields[6].Descriptor()
	// usernotificationlog.DefaultStatusMessage holds the default value on creation for the status_message field.
	usernotificationlog.DefaultStatusMessage = usernotificationlogDescStatusMessage.Default.(string)
	usernotificationsettingMixin := schema.UserNotificationSetting{}.Mixin()
	usernotificationsetting.Policy = privacy.NewPolicies(schema.UserNotificationSetting{})
	usernotificationsetting.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := usernotificationsetting.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	usernotificationsettingMixinHooks0 := usernotificationsettingMixin[0].Hooks()

	usernotificationsetting.Hooks[1] = usernotificationsettingMixinHooks0[0]
}

const (
	Version = "v0.12.0"                                         // Version of ent codegen.
	Sum     = "h1:DTub/yd0pMK9s0ONfZps2cYkyD2VPIuknVBv10BESc0=" // Sum of ent codegen.
)
